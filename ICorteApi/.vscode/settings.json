{
  "workbench.colorTheme": "Tokyo Night",
  "editor.formatOnPaste": false,
  "editor.formatOnSave": true,
  "[javascript]": {
    "editor.formatOnSave": true
  },
  "[json]": {
    "editor.formatOnSave": true
  },
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit"
  },
  "files.autoSave": "afterDelay",
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "eslint.alwaysShowStatus": "esbenp.prettier-vscode",
  "git.confirmSync": false,
  "files.associations": {
    "*.xml": "html",
    "*.svg": "html"
  },
  "git.autofetch": true,
  "folderTemplates.structures": [
    {
      "name": "<FTName>",
      "omitParentDirectory": false,
      "structure": [
        // {
        //   "fileName": "use<FTName>ViewModel.ts",
        //   "template": "ViewModel"
        // },
        // {
        //   "fileName": "index.tsx",
        //   "template": "IndexTS"
        // }
        {
          "fileName": "use<FTName>ViewModel.ts",
          "template": "ViewModel"
        },
        {
          "fileName": "index.tsx",
          "template": "IndexTS"
        }
      ]
    }
  ],
  "folderTemplates.fileTemplates": {
    "IndexJS": [
      "import PropTypes from 'prop-types'",
      "import { use<FTName>ViewModel } from './use<FTName>ViewModel'",
      "",
      "export const <FTName> = () => {",
      "  const {  } = use<FTName>ViewModel()",
      "",
      "  return (",
      "    <div><FTName></div>",
      "  )",
      "}",
      "",
      "<FTName>.propTypes = {}",
      ""
    ],
    "IndexTS": [
      "import { use<FTName>ViewModel } from './use<FTName>ViewModel'",
      "import { FC } from 'react'",
      "",
      "interface I<FTName>Props {}",
      "",
      "export const <FTName>: FC<I<FTName>Props> = () => {",
      "  const {  } = use<FTName>ViewModel()",
      "",
      "  return (",
      "    <div><FTName></div>",
      "  )",
      "}",
      ""
    ],
    "ViewModel": [
      "",
      "export const use<FTName>ViewModel = () => {",
      "",
      "  return {  }",
      "}",
      ""
    ]
  },
  "[csharp]": {
    "editor.defaultFormatter": "ms-dotnettools.csharp"
  }
}
